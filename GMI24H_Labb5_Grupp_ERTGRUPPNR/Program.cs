using GMI24H_Labb5_Grupp_ERTGRUPPNR.MyAlgorithmLibrary;
using System.Diagnostics;


/// <summary>
/// NOTE: You are by no means obligated to use this project structure. It is just a suggestion. If you want to create
/// your own project from scratch, you are most welcome to do so.
/// 
/// In the Program class you have the Main methods which is the starting point of any program which I am sure that you
/// already are aware of. Normally, it is not appropriate to keep this much code within the Main method so you should consider
/// to move some of the code to other classes and methods. However, the important thing is that you can test your algorithms
/// and that you can show that they work.
/// 
/// Please write comments in your own code for specific test cases or other things that you want to show.
/// It is ok to write your code in English and your comments in Swedish. However, do not mix Enlish and Swedish IN THE CODE.
/// Another way to go ahead with the testing is to write unit tests. It is very much up to you how you decide to 
/// organize your work.
/// 
/// Best of luck! /Elin
/// </summary>
internal class Program
{
    private static void Main(string[] args)
    {
        //Here you are given some predefined arrays to test your algorithms on.
        //Please note that in order to make any conclusions about the performance of your algorithms, you need to test them on larger arrays.


        //100 random numbers (range 1 - 100)
        int[] smallRandomNumbersSmallRange = { 5, 8, 5, 5, 1, 6, 4, 1, 8, 1, 5, 4, 5, 3, 2, 1, 3, 6, 4, 1, 8, 2, 9, 9, 9, 1, 4, 8, 3, 5, 7, 3, 8, 4, 5, 6, 5, 9, 4, 2, 9, 3, 4, 3, 1, 8, 9, 3, 1, 4, 1, 2, 4, 3, 5, 6, 6, 9, 2, 1, 9, 8, 6, 1, 6, 7, 1, 1, 1, 6, 4, 9, 2, 8, 7, 7, 6, 4, 5, 3, 1, 9, 8, 6, 3, 6, 6, 5, 5, 1, 1, 8, 4, 8, 7, 9, 6, 2, 7, 3};
        // 100 random numbers (range 1 - 1000)
        int[] smallRandomNumbersLargeRange = { 357, 482, 582, 856, 979, 668, 511, 884, 677, 964, 31, 535, 499, 454, 302, 38, 256, 262, 827, 623, 964, 464, 228, 190, 756, 666, 914, 87, 319, 448, 610, 446, 684, 15, 522, 247, 199, 361, 279, 423, 982, 439, 438, 810, 214, 887, 380, 788, 569, 173, 407, 773, 912, 908, 304, 10, 352, 366, 14, 731, 595, 198, 202, 567, 291, 482, 261, 133, 695, 812, 431, 214, 881, 552, 78, 750, 94, 294, 465, 725, 66, 817, 98, 627, 260, 653, 403, 35, 104, 73, 249, 646, 404, 35, 158, 832, 314, 601, 387, 941};

        
        //1000 random numbers (range: 1 - 100)
        int[] mediumRandomNumbersSmallRange = { 1, 1, 7, 1, 2, 6, 8, 8, 4, 8, 6, 5, 6, 6, 5, 5, 9, 2, 3, 1, 6, 5, 2, 8, 5, 7, 3, 3, 1, 6, 1, 1, 5, 1, 9, 2, 7, 1, 8, 4, 5, 2, 7, 8, 3, 6, 2, 8, 4, 8, 4, 9, 9, 2, 3, 3, 9, 1, 6, 4, 7, 4, 6, 3, 5, 3, 2, 3, 8, 9, 1, 9, 9, 1, 8, 6, 9, 5, 7, 7, 9, 4, 7, 1, 5, 7, 9, 5, 5, 7, 4, 6, 1, 9, 7, 6, 5, 4, 7, 4, 9, 9, 1, 1, 9, 8, 8, 5, 5, 1, 1, 3, 7, 4, 6, 9, 6, 6, 2, 2, 9, 6, 5, 8, 9, 8, 6, 6, 2, 3, 4, 3, 3, 5, 5, 4, 3, 6, 7, 8, 3, 4, 5, 2, 5, 6, 4, 7, 7, 7, 1, 5, 2, 4, 7, 7, 8, 1, 9, 5, 2, 1, 2, 4, 8, 5, 6, 6, 5, 6, 6, 9, 5, 1, 1, 4, 8, 5, 7, 4, 6, 1, 3, 5, 7, 3, 1, 6, 7, 2, 2, 7, 3, 8, 9, 7, 3, 6, 2, 3, 9, 9, 1, 4, 4, 1, 1, 4, 8, 2, 8, 5, 4, 3, 2, 4, 4, 9, 6, 4, 7, 8, 3, 1, 8, 1, 8, 1, 5, 4, 9, 4, 3, 4, 2, 3, 8, 9, 3, 7, 7, 7, 7, 3, 8, 6, 5, 6, 9, 6, 1, 6, 8, 6, 5, 4, 5, 3, 7, 6, 9, 8, 4, 8, 9, 7, 7, 7, 7, 5, 6, 4, 4, 6, 8, 9, 7, 8, 6, 3, 3, 6, 6, 8, 2, 3, 8, 4, 2, 6, 8, 7, 6, 2, 4, 9, 3, 7, 9, 2, 8, 7, 8, 4, 8, 4, 3, 2, 7, 7, 2, 8, 3, 2, 6, 7, 9, 8, 4, 2, 6, 4, 3, 8, 1, 6, 3, 5, 7, 8, 5, 9, 7, 8, 7, 6, 9, 6, 8, 5, 3, 3, 6, 1, 3, 2, 8, 4, 5, 4, 8, 5, 7, 1, 9, 5, 3, 2, 5, 1, 4, 2, 6, 7, 1, 6, 8, 2, 4, 8, 5, 4, 9, 7, 6, 7, 7, 6, 4, 2, 7, 8, 1, 6, 8, 7, 2, 1, 3, 1, 4, 9, 2, 6, 2, 4, 3, 1, 5, 6, 7, 9, 5, 4, 6, 9, 3, 9, 1, 8, 3, 4, 4, 4, 8, 5, 6, 2, 7, 1, 5, 3, 7, 7, 8, 8, 5, 4, 6, 7, 3, 9, 9, 9, 2, 1, 3, 5, 8, 4, 8, 4, 8, 6, 8, 7, 6, 7, 7, 2, 2, 4, 3, 7, 9, 3, 4, 6, 4, 6, 7, 5, 6, 1, 8, 6, 4, 6, 1, 2, 7, 7, 4, 4, 4, 6, 9, 2, 4, 5, 3, 2, 8, 1, 6, 4, 6, 2, 5, 2, 4, 9, 9, 5, 6, 8, 2, 2, 7, 3, 1, 3, 8, 3, 1, 1, 5, 2, 6, 8, 9, 7, 5, 2, 4, 7, 1, 3, 4, 5, 6, 3, 9, 8, 8, 3, 4, 9, 5, 4, 9, 1, 7, 1, 9, 7, 1, 1, 6, 4, 9, 7, 5, 1, 7, 7, 5, 4, 7, 5, 9, 3, 2, 8, 4, 2, 1, 8, 1, 9, 3, 5, 8, 8, 2, 8, 8, 1, 4, 6, 5, 8, 6, 6, 9, 4, 7, 7, 2, 3, 1, 2, 2, 5, 5, 2, 1, 5, 3, 6, 8, 1, 1, 9, 9, 4, 7, 8, 7, 1, 6, 6, 8, 6, 3, 1, 4, 7, 9, 6, 3, 5, 3, 2, 6, 6, 1, 6, 5, 1, 1, 9, 1, 6, 4, 4, 4, 9, 2, 9, 5, 3, 7, 5, 2, 4, 8, 8, 9, 1, 1, 9, 9, 3, 2, 1, 3, 1, 1, 4, 5, 3, 6, 2, 7, 7, 3, 9, 2, 7, 3, 1, 7, 3, 4, 3, 8, 7, 2, 9, 4, 9, 5, 2, 7, 8, 7, 5, 7, 9, 5, 4, 7, 1, 3, 9, 5, 5, 8, 1, 4, 9, 5, 2, 8, 7, 9, 9, 8, 5, 5, 4, 7, 1, 8, 4, 5, 1, 6, 5, 2, 5, 5, 6, 7, 7, 7, 7, 9, 5, 4, 1, 2, 1, 1, 1, 7, 2, 5, 8, 6, 9, 9, 9, 2, 8, 3, 7, 3, 9, 8, 9, 6, 6, 2, 7, 9, 8, 9, 4, 7, 8, 5, 9, 4, 4, 7, 7, 2, 5, 3, 2, 8, 3, 6, 7, 7, 2, 7, 1, 9, 7, 3, 6, 5, 3, 3, 3, 2, 3, 1, 6, 3, 7, 1, 4, 7, 9, 9, 3, 2, 2, 4, 6, 5, 4, 1, 8, 3, 6, 8, 7, 6, 6, 7, 6, 1, 2, 9, 8, 1, 7, 1, 2, 3, 8, 8, 6, 3, 7, 7, 7, 1, 7, 6, 5, 8, 1, 4, 8, 4, 9, 6, 5, 2, 1, 6, 9, 1, 7, 3, 9, 7, 5, 3, 9, 3, 3, 4, 4, 1, 2, 5, 7, 3, 3, 6, 8, 3, 4, 1, 3, 4, 4, 3, 8, 5, 7, 8, 7, 9, 7, 5, 3, 3, 4, 7, 4, 1, 8, 2, 3, 9, 1, 7, 4, 8, 1, 3, 7, 5, 3, 1, 2, 5, 1, 5, 7, 6, 4, 4, 7, 1, 6, 8, 9, 7, 6, 7, 1, 5, 2, 5, 4, 7, 5, 9, 5, 2, 6, 9, 8, 7, 7, 2, 2, 1, 2, 8, 9, 8, 3, 1, 6, 1, 7, 3, 7, 8, 8, 1, 1, 1, 8, 5, 3, 1, 8, 7, 5, 3, 3, 9, 1, 6, 8, 7, 3, 3, 7, 2, 7, 7, 3, 8, 1, 6, 5, 1, 2, 6, 3, 8, 6, 8, 9, 2, 8, 1, 7, 6, 8, 8, 9, 8, 8, 3, 5, 9, 2, 7, 2, 7, 2, 1, 8, 6, 9, 1, 5 };

        // 1000 random numbers (range: 1 - 1000)
        int[] mediumRandomNumbersLargeRange = { 290, 947, 509, 299, 642, 71, 396, 957, 242, 554, 836, 655, 655, 526, 829, 263, 408, 147, 174, 968, 504, 566, 738, 958, 249, 923, 239, 970, 297, 496, 791, 6, 144, 941, 772, 425, 833, 133, 637, 33, 494, 509, 482, 184, 361, 441, 408, 780, 495, 528, 905, 366, 875, 233, 927, 812, 636, 112, 733, 790, 746, 863, 675, 942, 807, 545, 619, 397, 624, 106, 301, 24, 522, 656, 87, 118, 848, 266, 627, 500, 73, 966, 260, 580, 720, 49, 664, 513, 11, 484, 256, 733, 321, 744, 65, 882, 719, 128, 389, 571, 905, 504, 29, 247, 670, 527, 644, 74, 198, 970, 54, 987, 909, 415, 375, 493, 359, 708, 212, 238, 618, 205, 911, 48, 593, 413, 31, 690, 313, 815, 569, 933, 379, 414, 487, 736, 77, 462, 157, 304, 231, 616, 798, 956, 86, 553, 399, 206, 139, 229, 504, 232, 902, 846, 908, 619, 168, 478, 628, 838, 634, 727, 362, 852, 967, 619, 170, 247, 515, 94, 821, 843, 325, 519, 260, 155, 248, 144, 292, 49, 47, 738, 950, 846, 603, 875, 253, 702, 323, 236, 101, 689, 141, 468, 955, 634, 734, 500, 983, 913, 111, 675, 678, 809, 477, 118, 809, 933, 618, 66, 723, 409, 376, 678, 763, 11, 274, 556, 552, 279, 775, 405, 61, 473, 922, 981, 97, 267, 601, 154, 567, 685, 650, 710, 901, 651, 730, 689, 866, 801, 837, 885, 727, 473, 309, 814, 143, 621, 161, 755, 252, 904, 728, 894, 154, 674, 689, 671, 400, 165, 202, 419, 382, 962, 954, 342, 146, 947, 246, 972, 474, 737, 760, 229, 110, 909, 559, 552, 260, 825, 457, 189, 333, 265, 586, 769, 617, 117, 595, 63, 812, 520, 572, 18, 596, 985, 529, 35, 454, 533, 778, 818, 632, 215, 540, 923, 296, 606, 701, 944, 384, 296, 52, 170, 866, 863, 838, 154, 820, 39, 967, 664, 718, 508, 896, 725, 600, 255, 210, 702, 516, 210, 446, 606, 44, 185, 702, 579, 747, 519, 732, 161, 356, 832, 355, 111, 553, 279, 628, 646, 866, 101, 819, 896, 23, 788, 400, 678, 59, 948, 843, 708, 222, 275, 145, 190, 944, 474, 81, 849, 349, 878, 88, 752, 188, 907, 149, 372, 782, 93, 699, 16, 685, 868, 628, 72, 610, 54, 739, 197, 337, 585, 47, 262, 633, 33, 967, 943, 355, 594, 739, 712, 963, 925, 484, 823, 405, 827, 51, 167, 371, 172, 529, 555, 371, 195, 483, 951, 126, 75, 583, 173, 859, 719, 314, 518, 284, 573, 487, 224, 979, 881, 427, 783, 715, 669, 226, 830, 992, 671, 343, 720, 124, 270, 459, 187, 313, 315, 943, 531, 469, 350, 241, 526, 19, 884, 269, 521, 989, 453, 933, 263, 666, 681, 691, 388, 408, 823, 20, 460, 202, 128, 773, 459, 217, 237, 629, 635, 428, 224, 338, 993, 267, 657, 183, 56, 30, 103, 355, 574, 25, 569, 203, 700, 768, 595, 153, 720, 720, 820, 749, 951, 358, 403, 206, 950, 496, 112, 397, 742, 514, 905, 231, 811, 381, 780, 863, 999, 458, 67, 127, 589, 386, 929, 254, 743, 975, 406, 586, 897, 950, 112, 787, 956, 485, 390, 896, 990, 807, 853, 535, 926, 816, 838, 556, 694, 255, 58, 145, 426, 416, 642, 63, 289, 255, 31, 715, 992, 405, 335, 174, 902, 393, 985, 408, 318, 525, 640, 173, 877, 482, 179, 755, 90, 56, 709, 966, 415, 505, 797, 672, 520, 336, 645, 557, 15, 882, 70, 666, 842, 807, 604, 541, 715, 79, 959, 527, 15, 579, 889, 58, 767, 993, 391, 72, 655, 976, 62, 368, 932, 105, 735, 247, 172, 382, 542, 999, 618, 648, 310, 910, 306, 680, 56, 576, 882, 621, 994, 392, 465, 721, 626, 295, 516, 908, 874, 806, 690, 929, 690, 143, 106, 686, 676, 245, 411, 307, 980, 593, 483, 288, 439, 434, 773, 555, 245, 239, 373, 854, 930, 302, 16, 567, 391, 150, 675, 518, 455, 40, 992, 860, 966, 326, 311, 960, 855, 547, 914, 950, 68, 93, 254, 94, 954, 41, 241, 980, 729, 71, 762, 933, 937, 581, 630, 947, 896, 324, 576, 729, 893, 31, 270, 63, 412, 801, 44, 973, 838, 733, 888, 671, 187, 548, 580, 931, 910, 426, 525, 350, 578, 453, 463, 147, 605, 382, 399, 977, 143, 622, 705, 787, 573, 23, 237, 163, 252, 781, 209, 978, 319, 397, 412, 216, 404, 196, 609, 397, 717, 59, 123, 362, 948, 725, 962, 67, 560, 116, 871, 911, 692, 56, 504, 837, 443, 206, 817, 473, 608, 805, 299, 510, 425, 132, 462, 593, 476, 157, 205, 602, 242, 210, 152, 407, 576, 775, 296, 219, 75, 718, 35, 91, 757, 308, 320, 200, 129, 369, 613, 263, 643, 401, 438, 740, 417, 758, 633, 202, 167, 516, 90, 234, 258, 468, 983, 67, 509, 864, 858, 636, 834, 726, 274, 921, 476, 502, 346, 390, 841, 664, 633, 584, 275, 881, 31, 757, 638, 369, 134, 171, 965, 15, 678, 475, 770, 895, 934, 140, 295, 287, 933, 695, 245, 344, 61, 416, 107, 360, 712, 432, 283, 859, 203, 936, 192, 661, 35, 526, 948, 862, 357, 557, 171, 419, 118, 381, 755, 273, 320, 447, 196, 63, 481, 164, 72, 646, 402, 346, 980, 241, 779, 691, 891, 269, 49, 91, 744, 629, 774, 271, 51, 366, 70, 168, 856, 273, 590, 939, 774, 670, 845, 543, 428, 461, 527, 625, 477, 896, 371, 605, 899, 418, 759, 870, 175, 986, 334, 329, 154, 204, 520, 275, 381, 27, 668, 741, 826, 732, 344, 639, 732, 79, 867, 392, 860, 203, 453, 97, 752, 890, 792, 279, 293, 672, 850, 814, 163, 934, 676, 598, 718, 729, 926, 786, 940, 960, 129, 901, 19, 823, 470, 12, 166, 52, 483, 50, 137, 507, 427, 539, 475, 403, 752, 299, 738, 328, 549, 546, 95, 103, 165, 490, 700, 130, 511, 928, 682, 348, 316, 228, 840 };
        


        
        
        //1000 sorted numbers (range: 1 - 100)
        int[] sortedNumbers = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 38, 38, 38, 38, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 42, 42, 42, 42, 42, 43, 43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 45, 45, 45, 45, 45, 45, 45, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 49, 49, 49, 49, 49, 49, 49, 49, 50, 50, 50, 50, 50, 50, 50, 51, 51, 51, 51, 51, 51, 51, 51, 52, 52, 52, 52, 52, 52, 52, 52, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 54, 54, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 56, 56, 56, 56, 56, 56, 56, 56, 56, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 64, 64, 64, 64, 64, 64, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 68, 68, 68, 68, 68, 68, 68, 68, 68, 69, 69, 69, 69, 69, 69, 70, 70, 70, 70, 70, 70, 70, 70, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 73, 73, 73, 73, 73, 73, 73, 73, 73, 74, 74, 74, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 76, 76, 76, 76, 76, 76, 76, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 78, 78, 78, 78, 78, 78, 79, 79, 79, 79, 79, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 82, 82, 82, 82, 82, 82, 82, 82, 82, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 84, 84, 84, 84, 84, 84, 84, 84, 84, 85, 85, 85, 85, 85, 85, 85, 85, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 87, 87, 87, 87, 87, 87, 87, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 91, 91, 91, 91, 91, 91, 91, 91, 92, 92, 92, 92, 92, 92, 92, 92, 92, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 95, 95, 95, 95, 95, 95, 95, 95, 95, 96, 96, 96, 96, 96, 96, 96, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 99, 99, 99, 99, 99, 99, 99, 99, 100, 100, 100, 100, 100, 100 };

        //1000 reverse sorted numbers
        int[] reversedSortedNumbers = { 100, 100, 100, 100, 100, 100, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 98, 98, 98, 98, 98, 98, 98, 98, 98, 97, 97, 97, 97, 97, 97, 97, 97, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 93, 93, 93, 93, 93, 93, 93, 93, 92, 92, 92, 92, 92, 92, 92, 92, 92, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 89, 89, 89, 89, 89, 89, 89, 89, 89, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 86, 86, 86, 86, 86, 86, 86, 86, 86, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 80, 80, 80, 80, 80, 80, 80, 80, 79, 79, 79, 79, 79, 79, 79, 79, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 76, 76, 76, 76, 76, 76, 76, 75, 75, 75, 75, 75, 75, 75, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 71, 71, 71, 71, 71, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 68, 68, 68, 68, 68, 68, 68, 67, 67, 67, 67, 67, 67, 67, 66, 66, 66, 66, 66, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 63, 63, 63, 63, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 61, 61, 61, 61, 61, 61, 61, 60, 60, 60, 60, 60, 60, 60, 60, 59, 59, 59, 59, 59, 59, 58, 58, 58, 58, 58, 58, 58, 57, 57, 57, 57, 57, 57, 57, 57, 56, 56, 56, 56, 56, 56, 56, 56, 56, 55, 55, 55, 55, 55, 55, 54, 54, 54, 54, 54, 54, 54, 54, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 52, 52, 52, 52, 52, 52, 52, 52, 51, 51, 51, 51, 51, 51, 50, 50, 50, 50, 50, 50, 50, 50, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 43, 43, 43, 43, 43, 43, 43, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 40, 40, 40, 40, 40, 40, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 35, 35, 35, 35, 35, 35, 35, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 32, 32, 32, 32, 32, 32, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 25, 25, 25, 25, 25, 25, 25, 25, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 22, 22, 22, 22, 22, 21, 21, 21, 21, 21, 21, 21, 21, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 9, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1 };

        //1000 nearly sorted numbers
        int[] nearlySortedNumbers = { 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 4, 2, 2, 2, 6, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 4, 4, 4, 4, 5, 4, 4, 5, 5, 5, 5, 7, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 5, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 13, 10, 10, 10, 10, 10, 10, 16, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 16, 17, 17, 17, 17, 16, 18, 18, 18, 18, 18, 18, 18, 18, 17, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 33, 33, 33, 32, 33, 33, 33, 33, 34, 34, 34, 34, 35, 34, 34, 35, 35, 35, 35, 35, 35, 35, 36, 36, 36, 36, 35, 36, 36, 36, 36, 37, 37, 37, 37, 36, 37, 37, 37, 37, 37, 37, 38, 38, 38, 38, 38, 38, 38, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 40, 40, 40, 40, 40, 40, 40, 41, 41, 41, 41, 41, 41, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 47, 47, 47, 47, 48, 48, 47, 48, 48, 48, 49, 48, 48, 49, 49, 49, 49, 49, 49, 47, 49, 49, 49, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 53, 53, 53, 53, 53, 53, 53, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 56, 56, 56, 56, 56, 56, 56, 56, 56, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 58, 58, 58, 58, 58, 58, 58, 58, 57, 58, 58, 58, 58, 60, 58, 59, 59, 59, 59, 61, 59, 58, 59, 59, 59, 60, 60, 60, 60, 61, 60, 60, 61, 61, 61, 61, 61, 61, 61, 61, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 64, 64, 64, 64, 64, 64, 64, 64, 65, 65, 65, 65, 65, 65, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 67, 67, 67, 67, 67, 67, 67, 67, 67, 66, 67, 67, 67, 68, 68, 68, 68, 68, 66, 68, 67, 68, 68, 69, 73, 69, 69, 69, 69, 67, 69, 70, 70, 70, 73, 70, 70, 70, 70, 70, 72, 71, 71, 71, 71, 70, 72, 72, 72, 72, 72, 76, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 74, 74, 74, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 75, 76, 76, 76, 76, 76, 77, 77, 77, 77, 77, 79, 77, 78, 78, 78, 78, 78, 74, 78, 78, 78, 78, 79, 77, 79, 79, 79, 79, 79, 80, 79, 79, 79, 79, 73, 80, 80, 80, 80, 80, 80, 80, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 82, 82, 82, 82, 82, 82, 82, 82, 83, 83, 83, 83, 83, 83, 83, 83, 83, 84, 84, 84, 84, 84, 81, 84, 84, 88, 85, 85, 85, 88, 85, 85, 85, 85, 89, 85, 85, 86, 82, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 89, 89, 89, 89, 89, 89, 89, 90, 93, 90, 90, 90, 97, 90, 90, 95, 91, 91, 91, 91, 96, 91, 89, 91, 91, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 93, 93, 93, 93, 93, 93, 93, 93, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 95, 95, 95, 95, 95, 95, 95, 91, 95, 99, 95, 89, 95, 95, 95, 95, 96, 96, 96, 96, 96, 96, 96, 97, 97, 97, 97, 97, 97, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 99, 99, 99, 99, 92, 99, 97, 99, 100, 95, 100, 100, 98, 100, 100, 93, 100, 100, 91, 100, 98, 100, 100, 100, 100 };


        
        

        //Since the methods in the Sorter and Searcher classes are not static, you need to create an object of each class
        //in order to call the methods which consist your algorithms.
        Sorter sorter = new Sorter();
        Searcher searcher = new Searcher();

        //To be able to measure how long it takes to run an algorithm, you can use
        //The Stopwatch and the TimeSpan classes.
        
        Stopwatch sw = Stopwatch.StartNew();
        //this is an appropriate place to run your algorithm.
        sw.Stop();
        TimeSpan elapsedTime = sw.Elapsed; //perhaps might be a good idea to do something with this...

    }
}